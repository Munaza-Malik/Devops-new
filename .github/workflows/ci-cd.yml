name: CI/CD Pipeline

# Step 1: Trigger workflow automatically
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Step 2: Define jobs
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Install dependencies and build app
      - name: Install dependencies
        run: npm install

      - name: Build the React Vite app
        run: npm run build

      # Step 4: Log in to Docker Hub (GitHub Secrets required)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest .

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest

      # Step 7: Deploy to AWS EC2
      - name: Deploy to AWS EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          echo "$EC2_KEY" > ec2-key.pem
          chmod 600 ec2-key.pem

          # Connect to EC2 and pull the latest image
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem $EC2_USER@$EC2_HOST << 'EOF'
            docker login -u $DOCKER_USERNAME -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull $DOCKER_USERNAME/my-react-app:latest
            docker stop my-react-app || true
            docker rm my-react-app || true
            docker run -d -p 80:80 --name my-react-app $DOCKER_USERNAME/my-react-app:latest
          EOF

